{"version":3,"sources":["pages/details/style.module.scss","pages/details/Abilities.tsx","pages/details/Stats.tsx","pages/details/index.tsx","redux/pokeDetails/actions.ts"],"names":["module","exports","Abilities","abilities","className","s","ability_wrapper","map","ability","name","Stats","stats","stat_wrapper","stat","base_stat","PokemonDetails","match","dispatch","useDispatch","useSelector","state","details","loading","useEffect","id","params","type","POKEMON_DETAILS_LOADING","axios","get","then","data","POKEMON_DETAILS_SUCCESS","payload","catch","err","POKEMON_DETAILS_ERR","SplashScreen","wrapper","left","right"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,QAAU,uBAAuB,KAAO,oBAAoB,gBAAkB,+BAA+B,aAAe,8B,iHCoB/HC,EAdG,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,UACnB,OACE,sBAAKC,UAAWC,IAAEC,gBAAlB,UACE,2CAEA,oCACGH,QADH,IACGA,OADH,EACGA,EAAWI,KAAI,SAACF,GAAD,OACd,6BAA0BA,EAAEG,QAAQC,MAA3BJ,EAAEG,QAAQC,eCSdC,EAhBD,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MACf,OACE,sBAAKP,UAAWC,IAAEO,aAAlB,UACE,uCAEA,oCACGD,QADH,IACGA,OADH,EACGA,EAAOJ,KAAI,SAACF,GAAD,OACV,+BACGA,EAAEQ,KAAKJ,KADV,MACmBJ,EAAES,YADZT,EAAEQ,KAAKJ,eC6BXM,UA5BQ,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,MAClBC,EAAWC,cAEjB,EAA6BC,aAA4C,SAACC,GAAD,OAAWA,EAAMC,WAAlFC,EAAR,EAAQA,QAASD,EAAjB,EAAiBA,QAMjB,OAJAE,qBAAU,WCjBqB,IAACC,EDkB9BP,GClB8BO,GDkBFR,EAAMS,OAAOD,GClBI,SAACP,GAChDA,EAAS,CAAES,KAAMC,MAEjBC,IACGC,IADH,mBACmBL,IAChBM,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcd,EAAS,CAAES,KAAMM,IAAyBC,QAASF,OACtEG,OAAM,SAACC,GAAD,OAASlB,EAAS,CAAES,KAAMU,cDahC,CAACnB,EAAUD,EAAMS,OAAOD,KAEvBF,EAAgB,cAACe,EAAA,EAAD,IAGlB,qBAAKjC,UAAU,YAAf,SACE,sBAAKA,UAAWC,IAAEiC,QAAlB,UACE,sBAAKlC,UAAWC,IAAEkC,KAAlB,UACE,oCAAKlB,QAAL,IAAKA,OAAL,EAAKA,EAASZ,OAEd,cAAC,EAAD,CAAWN,UAAS,OAAEkB,QAAF,IAAEA,OAAF,EAAEA,EAASlB,eAGjC,qBAAKC,UAAWC,IAAEmC,MAAlB,SACE,cAAC,EAAD,CAAO7B,MAAK,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAASV","file":"static/js/pokemon-details.3c135ff6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__1vHzq\",\"left\":\"style_left__Oaifp\",\"ability_wrapper\":\"style_ability_wrapper__fASJJ\",\"stat_wrapper\":\"style_stat_wrapper__3XFry\"};","import s from \"./style.module.scss\";\nimport { PokemonAbilities } from \"types/pokemon\";\n\ninterface Props {\n  abilities?: PokemonAbilities[];\n}\n\nconst Abilities = ({ abilities }: Props) => {\n  return (\n    <div className={s.ability_wrapper}>\n      <h2>Abilities</h2>\n\n      <ul>\n        {abilities?.map((s: PokemonAbilities) => (\n          <li key={s.ability.name}>{s.ability.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Abilities;\n","import s from \"./style.module.scss\";\nimport { PokemonStats } from \"types/pokemon\";\n\ninterface Props {\n  stats?: PokemonStats[];\n}\n\nconst Stats = ({ stats }: Props) => {\n  return (\n    <div className={s.stat_wrapper}>\n      <h2>Stats</h2>\n\n      <ul>\n        {stats?.map((s: PokemonStats) => (\n          <li key={s.stat.name}>\n            {s.stat.name} - {s.base_stat}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Stats;\n","import SplashScreen from \"components/SplashScreen\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\n\nimport { getPokemonDetails } from \"redux/pokeDetails/actions\";\nimport { PokemonDetailsState, RootState } from \"types/redux\";\nimport Abilities from \"./Abilities\";\nimport Stats from \"./Stats\";\nimport s from \"./style.module.scss\";\n\ninterface MatchParams {\n  id: string;\n}\n\nconst PokemonDetails = ({ match }: RouteComponentProps<MatchParams>) => {\n  const dispatch = useDispatch();\n\n  const { loading, details } = useSelector<RootState, PokemonDetailsState>((state) => state.details);\n\n  useEffect(() => {\n    dispatch(getPokemonDetails(+match.params.id));\n  }, [dispatch, match.params.id]);\n\n  if (loading) return <SplashScreen />;\n\n  return (\n    <div className=\"container\">\n      <div className={s.wrapper}>\n        <div className={s.left}>\n          <h1>{details?.name}</h1>\n\n          <Abilities abilities={details?.abilities} />\n        </div>\n\n        <div className={s.right}>\n          <Stats stats={details?.stats} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PokemonDetails;\n","import axios from \"axios\";\r\nimport { POKEMON_DETAILS_ERR, POKEMON_DETAILS_LOADING, POKEMON_DETAILS_SUCCESS } from \"../actionTypes\";\r\n\r\nexport const getPokemonDetails = (id: number) => (dispatch: any) => {\r\n  dispatch({ type: POKEMON_DETAILS_LOADING });\r\n\r\n  axios\r\n    .get(`/pokemon/${id}`)\r\n    .then(({ data }) => dispatch({ type: POKEMON_DETAILS_SUCCESS, payload: data }))\r\n    .catch((err) => dispatch({ type: POKEMON_DETAILS_ERR }));\r\n};\r\n"],"sourceRoot":""}